# Path to your oh-my-zsh configuration.
ZSH=$HOME/.oh-my-zsh

# Set name of the theme to load.
# Look in ~/.oh-my-zsh/themes/
# Optionally, if you set this to "random", it'll load a random theme each
# time that oh-my-zsh is loaded.
export ZSH_THEME="nanda"

# Set to this to use case-sensitive completion
# CASE_SENSITIVE="true"

# Comment this out to disable weekly auto-update checks
DISABLE_AUTO_UPDATE="true"

# Uncomment following line if you want to disable colors in ls
# DISABLE_LS_COLORS="true"

# Uncomment following line if you want to disable autosetting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment following line if you want disable red dots displayed while waiting for completion
# DISABLE_COMPLETION_WAITING_DOTS="true"

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Example format: plugins=(rails git textmate ruby lighthouse)
plugins=(git git-flow brew history jenv nvm node npm pyenv python docker docker-compose kubectl kube-ps1 dotenv)

source $ZSH/oh-my-zsh.sh

alias k="kubectl"
alias d="docker"
alias g="git"

#Source AWS keys
export AWS_PROFILE=default

aws_prod() {
  export AWS_PROFILE=prod
}

login_ecr() {
  eval $(aws ecr get-login --no-include-email --region eu-west-1)
}

minik() {
  minikube docker-env
  eval $(minikube docker-env)
}


load_aws() {
  if test $# -lt "2"; then
    echo "PLEASE ADD YOUR MFA TOKEN when calling load_demo or load_prod. Ex: load_demo 86238621"
    return 1
  fi

  unset AWS_SESSION_TOKEN
  unset AWS_SECRET_ACCESS_KEY
  unset AWS_ACCESS_KEY_ID

  username=fernanda
  account=$2

  json=$(aws sts get-session-token --serial-number arn:aws:iam::$account:mfa/$username --token-code $1)
  echo "AWS Response is $json"

  export AWS_ACCESS_KEY_ID=$(echo $json | jq -r '.Credentials.AccessKeyId')
  export AWS_SECRET_ACCESS_KEY=$(echo $json | jq -r '.Credentials.SecretAccessKey')
  export AWS_SESSION_TOKEN=$(echo $json | jq -r '.Credentials.SessionToken')

  echo "Your ID is $AWS_ACCESS_KEY_ID"
  echo "Credentials loaded"
}

#load_private() {
#  tfswitch ${MAINTF}
#  export AWS_PROFILE=private
#  load_aws $1 MYACCOUNTNUMBER
#  export KOPS_STATE_STORE=s3://kops-state
#  export KOPS_CLUSTER_NAME=dev.k8s.local
#  kubectl config use-context dev.k8s.local
#  kops validate cluster
#  kubectl cluster-info
#}
# Set VIM as default editor
export EDITOR=vim

# Load ssh passphrase
eval $(ssh-agent -s)
if [ "$(uname -s)"=="Darwin" ]; then
  ssh-add -t 28800 --apple-use-keychain $HOME/.ssh/id_ed25519
else
  ssh-add -t 28800 -K $HOME/.ssh/id_ed25519
fi

# Python - looks like pyenv plugin is not working very well so
eval "$(pyenv init --path)"

#Locale usually required by python
export LC_ALL=en_US.UTF-8
export LANG=en_US.UTF-8
export TF_CLI_ARGS_plan="-compact-warnings"
export TF_CLI_ARGS_apply="-compact-warnings"
export TF_CLI_ARGS_import="-compact-warnings"

# Otherwise terraform complains
export KUBE_CONFIG_PATH=~/.kube/config

# Main tf version
export MAINTF="1.0.2"

#Pyenv plugin not working very well so you need to:
eval "$(pyenv init -)"

#PATH
PATH=${PATH}:/usr/local/bin
PATH=${PATH}:/usr/local/sbin
PATH=${PATH}:/usr/bin
PATH=${PATH}:/usr/sbin
PATH=${PATH}:/sbin
PATH=${PATH}:$HOME/packer
#Did explore like this so Brew can overwrite apple dev tool
export PATH="/usr/local/bin:$PATH"
nvm use default
tfswitch ${MAINTF}

